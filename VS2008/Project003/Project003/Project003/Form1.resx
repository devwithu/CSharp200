<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABtRmoAb0lrAG9MbQBvTW0Ab01uAHBK
        bAB2UXIAdVNyAHdScwBzVXMAd1d2AHhVdQB4VnUAd1t3AHhdeAB9X3sAf2F8AH5hfgB/ZX8Af39/AIBa
        egCAXXwAgl58AIJhfwCEZIIAiGODAIljgwCLaocAimuHAI1sigCRbowAnGiIAIxxiwCMcooAjnOMAI9z
        jQCSdo8Ak3aSAJ93kgCRepEAlXiSAJ55kACcf5kAo3qVAKZ4lgCOjo4Ajo+PAI+PjwCPkJAAj5GRAJCQ
        kACRkZEApIGdAKeLogCkjaEAqYigAKqKoQCsj6MAqo6mALqApQC7hakAvYepALiNqQCuk6cArJOpAK2T
        qgCol6gAr56oALebrQC+l7EAtZiwALabsgC3n7EAtJ2yAKioqACpqakAqqqqAKqrqwCrrKwArK2tAKyu
        rgC1oK8AtaOuALyptwC9q7cAv6K6AL6puAC/qbsAvay7AL+wuwDEiq8Ax4+zAMOftgDNn74AzZ6/AMej
        uwDApboAy6K9AM2gvgDCtb0Az6PBAMipwADNqMAAz6/GANOrxgDHscIAwLXAAMiwwwDLs8YAzLDEAM63
        xwDFu8EAxr/DAMq7xQDIucYAzLfIAMu5yADQtcoA2bbNANe5zwDVvMwA173PANi7zQDZvNIAzMTLAMvJ
        ywDTyM8A0MvOANfB0QDfwdQA3MLVAN/C1gDZxNUA3cXWANXL0gDTzNEA2M3WAN3J2QDfytkA0dDSANjY
        2ADZ2NkA3tndAN/c3gDhxtgA4cfZAOTI2wDnzdwA5s/dAOHX3QDi2d8A49rfAOfU4ADr0eIA69XkAO7U
        5QDi3+EA5N7iAOXf4wDn3+QA8N/pAPHf6wDi4eIA4+HiAOPj4wDk4OMA4+PkAOfg5gDn5ucA6ePmAO3h
        6QDq5OgA6OboAOnn6QDr5ukA6+nrAO7o7ADs6+wA7OzsAOzt7ADt7O0A7+7vAPHm7QD15O4A8enuAPTp
        8ADw7/AA8/PzAPb19gD///8AVCtRAIAAAAAAAAAAYCCVAH/pSwDAbzwAAAAAwAAAAABUIJUAAgAAAIAA
        AAAAAAAAcKZQAOT1rwACAAAAQzpcRG9jdW1lbnRzIGFuZAkAAAB0aW5nc1xlZ29yXE15IERvY3VtZW50
        c1xCb3JsYW5kXENvbW1vblxOZXdJYwAAAAAA6mABcm9kdf/pkHwOEIF8gAEAAAAAAAAAAAAAAAAAANwf
        lQAA6mABNgAAAAAAAAAuEIF8NgAAAHgglQADAAAAQAAAADYAAAAAAAAANgAAAMgflQD/h9R3iCCVAPOZ
        g3w4EIF8/////y4QgXwW6ksAgAEAAADqYAE2AAAALCCVAAAAAAAAMDAwMDM0NDEvLjAwMDAAS768vLuy
        sK2jnam2vLy8MEu+tamquahDa6asr660szBLvpCWobgjIhNzq7qxpKcwS71/lZqcKQsSapuit5+OMEyP
        eYSCkosIJIuTlJmYjC5NcnpHbYGKGXSGg2FYiYAvT1cXGANKHUIcbCsEBTeIMlBJCb8mDAKFOxYGGA0l
        hzROUjUbH3xWAR52aBUabn00TVo/XmVpeAdIZmJjX2BxM0ueKjxcd0EoCnVnWz5FfjBLvkQgPZEhDw5Z
        ezwtcI0wS76lUyddNhEQb0YsZKWlMEu+vr6XVEA5ODpVoL6+vjAAS0tLS01PUVBNTEtLS0sAgAEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAACgA
        AAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXTNYAGA0WgBjOl4AZT5hAGNB
        YQBnQGMAaUNlAG1GaABtSWoAb0psAHJMbQB2T3EAdVNyAHVUcgB6VHUAeVh3AH9bewB9YHsAf2B8AH9/
        fwCBXHwAkl9/AIFifgCSYH8AhWOBAIpmhACHaoUAiGyHAItuigCUZ4MAnGKEAJVogwCeZIgAkW6MAJpt
        iQCOcYsAkHKNAJlyigCYd4sAlniLAJp6jQCYfo4Al3eSAJd5lACZeZQAoGqLAKtxlQCtcZYAqHaVAKt4
        lwCqfJgAsXKZALR3nACzep4AtHmeALl5nwC9faQAj4+PAJKBiwCZgJcAm4uUAJ2BmgCdkpgAoYGVAKCB
        mwCkhJgAoIOcAKGFngCog50Ao4uaAKGJnwCrip8Ap4eiAKSLogCqjaUAvYClALqGpgC6iqcAv4GoALuH
        qAC9h6gAuYyoAKaQpQCok6AAqJahAKuQpgCskKcAppihAKqapACsk6kAr5muALSTrQC6kawAspqpALKY
        rwC4m60Ar5ywALSbsQC9n7cAqqCnAK6jqgCoqKgArKqrAK+vrwC0oLIAuKK1ALesswC7rbYAvau7AL+q
        vQCysbEAtLKzALS0tAC6uboAwIGnAMCBqADBhakAw4WsAMOKrQDFia4AwYytAMWMrwDFi7AAx4+yAMiP
        sgDGkrIAwpayAMSUsQDGlrQAyJCyAMmStADMlbcAw5y2AMuWuADKmbgAzZm5AM6cuwDOm7wAzp28ANCe
        vADBoLYAwqe3AMOkuwDOob0AzKS9AMOrvQDSob8Awba9AMDAvwDFrMAAzK7EANKhwADRpMEA1KfEANGq
        xADUqMUA0K7EANWsxQDWrcgA2K7JAMuyxADBvsAAxr7DAMm/xQDNtsgAzbjKANGyxQDStMgA2LLLANq1
        ywDZtcwA3LTNANO6ywDZuc4A3LrPANu70ADdudAA2L7RANy90QDivtUAwMDAAMTAwwDFwMQAxsbGAMnC
        xgDMzMwA1MTPANHIzQDQzM4A1cTQANvC0wDVzNIA2cvUANzJ2ADdzdkA0tLSANXS1ADV1dUA29DXANjY
        1wDc0tgA2dbYAN7W3ADX2NgA2NjYANzc3ADhwtUA5cHXAOHE1gDjxdkA6MXbAOHJ2QDnydoA4czZAOPN
        3QDmzd0A6cveAOLU3QDo0t8A4NrdAOzO4QDk0uAA5dTgAOjS4ADt0OIA6dbiAOvX5ADu1eUA4tngAObZ
        4QDh3uAA5t3iAOfe5ADo2eIA7NrlAOzd5gDv3+kA8NPmAPLa6gDk4+MA6OHmAOzl6QDt6OwA9OLtAPHq
        7gD25fAA9OzxAPnq8wD28PMA+fH2APvz+AD///8AWixTACwglQAAAAAAAAAAOjo6Ojo6Ojo6Ojo6Ojo6
        Ojo6Ojo6Ojo6OjoAAAAAADrw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8DoAAAA68PDw8PDw8PDw8PDy
        8/Xz8efn8PDw8PDw8PDw8DoAZvzw8PDw8PDw8PH1+fr7+fPx6fHz8vDw8PDw8PDw8Dpm/PDw8PDw5+fy
        9/r7+/rz6Nzc5fL5+fHw8PDw8PDwOmb88PDw8M7c8vj4+Pj49/Loy8vc8ff7+vPw8PDw8PA6Zvzw8PDK
        x+309vT09PahHBxT5dro9/v7+vPw8PDw8Dpm/PDwzbzj7+/v7+/vrQpaWhNT2ur2+vv7+vPw8PDwOmb8
        586k1uTu7u7u7u9XWgkEYRne4/T2+Pr7+fDn5+c6ZvzOua3d4eHd2dnZ5EslGw1THd7h7u/09vf39efO
        zjpm/MZsz9nZ2dKzsLPU1whiuwNu0dXZ3dvf5vHz583NOmb8opLS09PSs6inp6jRpgcHYsKtrs+/sr7B
        yeXxxsQ6ZvxlndDQ0tGyraGXna3CRxDf0aiXqK2tvr7ByejFujpm/FWftLTSjz4+lqWoraYlC5bSrqiy
        Vj5KwcHJ6Mq4Omb8SKCxtI8GPCUGkr+mBiUsBmK/wiUKRw8Xw9rt57U6ZvxIoKy0GkQKEVsBLBUl19Za
        CUMPD2IBRAel6vLxcjpm/EWaoLERVgEEpQgRES3X1mIILAREVgFWCpbr9OlxOmb8QJCcqUsMQy0DSdSP
        A1piCyyylgwZSyIJ2Ovt3Gg6ZvwqgZOaqS0PD1yrqatcCwMrl4+bqBoPFZfP4OzAZzpm/DtSiIuYnJ+f
        nJiTmq5fD6aNXX+Qnp+fn6/Y6rdmOmb8PzODhIaIiomIhIqZnQr9ao1STn6IiYmYqtjacmc6ZvxnKFF9
        fX2CfX2DiJsMFUMCY11Qd32Cg4yq1LxvaDpm/HE9MXd4eHp6eHyQRQtaJRUZhXl4eHh9jKq/onFxOmb8
        cnAoNnV2dnZ4hqlBSgsDSg2oh3h2dnyQqKRycnI6Zvy1lWQmN090dHie2GoObWk8JNigeHR2g5GhtrW1
        lTpm/Li4uFgjNTlzeqri7UcFCRLm46p7c3aAjre4uLi4Omb8urq6ulkjMDh1mdHg69/C6+DRmXVMTWCj
        urq6uro6ZvzExMTExGspITR1iJ6vz9Gwnoh1NTJeucTExMTExDpm/M3NzczNyL1ZJh8vN0x1dUw2MC5C
        bMXNzc3NzcjNOgBm/M7Ozs7Ozs7GbEYnHhYYIClUlMrOzs7Ozs7Ozm8AAABm/Pz8/Pz8/Pz8/Pz8/Pz8
        /Pz8/Pz8/Pz8/PxvAAAAAABmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZgAAAOAAAAfAAAADgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAAPgAAAHKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAABtQWYAb0RoAHFGagBySWwAfE9rAHRQ
        bwB2TnAAeU9zAHZTcgB5U3QAeVp3AHtbeQB8YXsAf39/AIJScACGU3MAgVRxAIVVcwCGV3UAild3AIZa
        dQCGXXcAgVZ5AIJbfACMW3kAgmJ+AIlhegCLYHwAimd8AIpofQCQYH8AiF+AAJNegACFYoAAimWEAIJp
        ggCKaIYAjWyIAJVjgwCZZIYAk2qDAJ1miACUbY0AnGiJAI1ygwCPfYkAknKHAJJ2hwCXcYgAlHSIAJJx
        jgCUcI4AmnGLAJN8jQCZfo4AlHSQAJp0kQCVe5MAmXqVAJx/mQCibY4AoHKPAKlukwCncpMAq3KWAKR8
        lQCrc5gAon2aAKx6mQCye50AtXqgALx+pQCPj48AnISTAJmKlACdgpoAnpGaAKKCnQCqhZwAoomYAKSK
        mgChjpoAooifAKeKnACkjZwAq4qfAKOWnwCnhKAAqIejAKWKogCqiqQArY6oALOEogC8gaYAtounAL2F
        qACzj6oAu4upAKeQpACplqMApJuhAKuTqQCum60AsJenALOUrAC9lK4AspmtALWXsAC1m7EAupuxAK6i
        qgCoqKgArKysALSjrgCwrK4Ar7CvALCwrwCvr7AAsaCxALSgsgC1prAAtqG0ALyjtgC2qLEAs6ywALas
        sgC6q7UAuK20AL2stgC8pLkAu6m6AK+wsAC0tLQAuLe5ALy8vADChawAw4mtAMGRrwDGi7EAyI2yAMST
        sgDJkrUAw5u1AMyVuADNmroA0Jy9AMGgtQDGobkAzKK9AMKpvQDJqb4AwbW9AMunwQDErcEAy6zBANKk
        wQDTq8UA1q3IANivyQDBssEAy7HEAMW8wQDLusUAzbTIAMa7yADNusoA0bHFANS0yQDZtM0A07rMANm5
        zgDXvtAA27vQAOC+1ADExMQAyMHGAMrDyADKxsgAzMbKAMzLzADTws0A0MvOANDOzwDP0M8A0NDPAM/D
        0ADPz9AA1MTSANvD1ADTzNEA2srUANzL2QDP0NAA09PTANnU1gDX2NcA2NjXANvS2ADY1tgA3dfaAN7W
        3QDX2NgA2NjYANzZ2gDb3NsA29vcANza3ADb3NwA3t7eAOHC1gDjxNkA6MfcAOTL3ADpyt4A4tHcAODa
        3QDg3t8A3+DfAODg3wDf3+AA683hAOHW4ADs0+MA4trgAOXY4QDh3uAA5dziAOfY5ADm3uUA6tvlAO7e
        6QDw1eYA8dfpAPLb6gDf4OAA4uLiAOTh4wDl4uQA5eXlAOni5gDo6OcA5+XqAOvk6QDn6OgA6enpAO3o
        6wDt6uwA7uztAPPi7QDw7e4A9uXwAPTs8QD18fMA////AGs+ZAAAAAAAAElJSUlJSUlJSUlJSUlJSUlJ
        SUlJSUlJSUlJSUlJSUlJSUlJSUlJAAAAAAAAAABwcPX19fX19fX19fX19fX19fX19fX19fX19fX19fX1
        9fX19fX19fX1SUkAAAAAAHD19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fVJ
        AAAAcPX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX1SQAAcPX19fX19fX1
        9fX19fX19fX39/f4+vr69/b19/f39fX19fX19fX19fX19fX1SQBw/vX19fX19fX19fX19fX19fX29/j4
        +vfu4uLt9fr6+Pf19fX19fX19fX19fX19Ulw/vX19fX19fX19fX19fXv7u7w8/b28+DIyMzM0fP6/f34
        9/X19fX19fX19fX19Ulw/vX19fX19fX19fX17NjY4OPm5/P55eDj5eXgyNj3/f39+vf19fX19fX19fX1
        9Ulw/vX19fX19fX19fHMwsbX4ebn+fv5v3h6g97l4Mnw/P39/f349/X19fX19fX19Ulw/vHx8fHx8fHx
        7L61v9ff5ur5+ftrDAwMDBq85tfh/P39/f39+PXx8fHx9PHx8Ulw/u/v7+/v7+/Zs6O1wN/m6ur5+6YL
        U8n3uhoa19ff+fv8/f39/ffx7+/v7+/v70lw/uzs7Ozs7NGwmKa/19/p6erq+Tsl3iULZqYLg9ff6vn7
        /P39/f317uzs7Ozs7Elw/tna2tzc67B/ob3V3+jp6Onp+Ts7vAoKOvYKa+To6enq+fv9/f3879za2dra
        2klw/tDOztDQtnKWqtPd3+jo6Ojo6kwYwBgKZpYKg+jo6Ojo6vn7/P39+OzQ0NDO0Elw/svFxcvHfnKh
        vdTd393d3d/f6KoJJubzvBgi5t/f3d/f3+n5+/z9/O/Ly8fFy0lw/sLCwsKiZHuo0tTW1tbU1tbd3ehr
        CVrkJgy1393d1t3W3d3f5vb8/PrQwsLCwklw/rm7ucFvaJer09PTrq2rrtPU1t3fTgcmB3rA09TU1NTU
        1NPSv9fl9/rst7i4u0lw/rS0tK9SbZut0tKrqKenp6it0tTW3xoHWr2qqK3T09PTraioqrW/4Pb1ubS0
        tElw/rKysn1Qbqetrq2qqquqp5unqa7T1WYH19Orm6etrq6tqqqsrKy8xu32wrKysklw/q+vr1dUk6eu
        06xsW6Gsqqebm6i9vDwEpNbSqJenqausmltmpL2/v8jzx6+vr0lw/oeHh0tWk6jSbgoEBAQzqq2nl6Rp
        CgQEBCOkq5uXpKYzBAQEBG3Av8bw2YeHh0lw/oeHhzZWlKmXBCKawE4EIpuqqqQEInu9aQgXvaSqpCID
        TsCmIgSav8bw7oeHh0lw/oWGhjBWlKs0B787JW1tBwdt1zsDpqqovW0DgsBtBwNtbQcltQg4vMbw84aG
        hklw/oWFhS1Pk6sjJZoCAhjAoQcCAgIl0p2Um7wCAgICApvXJQICliUlvdfz9oWFhUlw/nV2di1Pj6gj
        GKQBASa8GAEjWRgK0qmZoZYBK1kYASO9RAEHphglv97w83aEdUlw/nFxcS1Cap1OAWykbJYKAVyu0mkB
        OdKtpBgBpK6uWAEYoZaqXAFcvdfl4nFxcUlw/nBwcC0+X5WdF/8YOf8EYamenqk0/wogBAFcn52eqWEE
        BCMYARetrdfjx3BwcElw/nBwcC41XY2cnUQXAyuZnpySkpyfYQj/JWmUkZGSnJ6ZKyAgRJ2eqMDjtHBw
        cElw/nBwcEspRWKOlZ2enp2ckpGQkZKcq07/vJlqYo2QkJKcnZ2dnJWVp7/jonBwcElw/nFxcWUdPl2J
        jpCRkZCQkJCQkJGcqjT/bZuNX2KOjpCQkJGRkJCRm7/JhXFxcUlw/nZ0dnUtKUVeiYuMjIyMjpCQkZyo
        ewEBCqGXamKKjo6MjIyMi4yPob+2dnV0dUlw/oWFhYVNGz1GYImJi4uMjpCSnambBwd4Axqql2qKjo6M
        i4uJiYmPob+vhYWFhUlw/oaGhoaFLSdAR16IiYmMjpKdrb0lBrrlYwZTrJePkY6MiYmIYGKPo7aGhoWF
        hklw/oeHh4eHVxYoQ0dIiIiMkJyt1XoKoKV3pUwKpqqnnJCMiYheXmKTprCHh4eHh0lw/oeHh4eHhzYZ
        LENHSIiMkZ7T5jo25Q0NJPIMZ8CtnpGMiEhHRl+WsYeHh4eHh0lw/q+vr6+vr4AtGSpBR0iLkZ/T5zw6
        8w0NJPIMd+TTn5GLXkdFRmmir6+vr6+vr0lw/rKysrKysrJ5HhkqP0dgjp3S5HgLpbqDyWYLtd+unY5g
        R0FAT4GysrKysrKysklw/rS0tLS0tLS0ch4UKD9HiZGf09ckCmN6Ogo85NKekYlGQT1CcrK0tLS0tLS0
        tElw/ru7uLi4u7e7uYAtECE9RmCOnKu9TAYGC1rVq5yOYEY9LDVnsri4wbm4uLu7uUlw/sLCwsLCwsLC
        wsKiShEZKEBGYo2Vp6irqKeVjWJGQConMXm3wsLCwsLCwsLCwklw/sXLy8vLx8fLxcvLx3kwDxkoPUNG
        XWJiYl1GQz0oHxxRosfLysfFxcvLxMfLxUlw/s3OztDQztDO0M3Nzs7HfDcVEhkhJygoKCchGRMcUJjL
        zc3Nzc3N0NDNzs3QzUlw/tvc2tra3Nra3Nra3NrZ2dyzeVAvGxEFERsyVX+22tna69rZ2dza2tvZ2trZ
        2kkAcP7s7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzscAAAcP7v7+/v7+/v
        7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vcAAAAHD+/vHx8fHx8fHx8fHx8fHx8fHx
        8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fFwAAAAAABwcP7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v7+cHAAAAAAAAAAAHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwAAAA
        AAD4AAAAAB8AAOAAAAAABwAAwAAAAAADAACAAAAAAAEAAIAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAQAAgAAAAAAB
        AADAAAAAAAMAAOAAAAAABwAA+AAAAAAfAAA=
</value>
  </data>
</root>