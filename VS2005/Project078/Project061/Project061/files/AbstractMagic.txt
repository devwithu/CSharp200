01: using System;
02: namespace Com.JunBo.Logic{
03:     public abstract class AbstractMagic : IMagic {
04: 
05:         protected int[,] mabang;//2차원 배열 선언
06: 
07:         public AbstractMagic(int n){
08:             this.mabang = new int[n, n];//생성, 초기화
09:         }//생성자
10:         
11:         //추상메서드
12:         public abstract void Make();
13: 
14:         
15:         public virtual void Print(){
16:             for (int i = 0; i < mabang.GetLength(0); i++){
17:                 for (int j = 0; j < mabang.GetLength(1); j++){
18:                     Console.Write("{0}\t", mabang[i, j]);
19:                 }
20:                 //row의 합 출력
21:                 Console.Write("R:{0}\n", SumRow(i));
22:             }
23:         }//Print
24:         //row의 합을 구한다.
25:         protected int SumRow(int row){
26:             int count = mabang.GetLength(1);
27:             int total = 0;
28:             for (int i = 0; i < count; i++){
29:                 //row는 변함없이 col만 변한다.
30:                 total += this.mabang[row, i];
31:             }
32:             return total;
33:         }//SumRow
34:         protected int SumCol(int col){
35:             int count = mabang.GetLength(0);
36:             int total = 0;
37:             for (int i = 0; i < count; i++){
38:                 total += this.mabang[i, col];
39:             }
40:             return total;
41:         }//
42:     }
43: }
