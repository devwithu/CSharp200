01: using System;
02: namespace Com.JunBo.Logic{
03:     public class OddMagicSquare:AbstractMagic{
04: 
05:         public OddMagicSquare(int n):base(n) {
06:         }//持失切
07:         public OddMagicSquare():this(3){
08:         }//持失切
09: 
10:         public override void Make() {
11:             int top = mabang.GetLength(0)-1;
12:             int x = 0;
13:             int y = top / 2;
14:             mabang[x, y] = 1;
15:             for (int i = 2; i <= (top + 1) * (top+1); i++){
16:                 int tempX = x;
17:                 int tempY = y;
18: 
19:                 if (x - 1 < 0){
20:                     x = top;
21:                 }
22:                 else {
23:                     x--;
24:                 }
25:                 if (y - 1 < 0){
26:                     y = top;
27:                 }
28:                 else{
29:                     y--;
30:                 }
31: 
32:                 if(mabang[x,y]!=0){
33:                     x = tempX + 1;
34:                     y = tempY;
35:                 }
36:                 mabang[x, y] = i;
37:             }
38: 
39:         }//Make
40: 
41:         public override void Print(){
42:             int count = mabang.GetLength(0);
43:             for (int i = 0; i < count; i++){
44:                 for (int j = 0; j < count; j++){
45:                     Console.Write("{0}\t", mabang[i, j]);
46:                 }
47:                 Console.Write("R:{0}\n", SumRow(i));
48:             }
49:             for (int j = 0; j < count; j++){
50:                 Console.Write("C:{0}\t", SumCol(j));
51:             }
52:             Console.WriteLine();
53:         }//Print
54:     }//class
55: }//namespace
