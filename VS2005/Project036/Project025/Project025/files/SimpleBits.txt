01: using System;
05: namespace Com.JungBo.Maths {
06:     //string
07:     public class SimpleBits {
08: 
09:         public const int MASK02=1;    
10: 
11:         //10진수를 2진수로 진수변환
12:         public static string TenToBinary(int n) {
13:             string s = string.Empty;
14:             for (int i = 0; i < 32; i++){
15:                 int aa = n & MASK02;
16:                 s = aa + s;
17:                 n >>= 1;//쉬프트연산은 음수,양수 무관
18:             }
19:             s = s.Substring(s.IndexOf("1"));
20:             return s;
21:         }//
22:         //1에 대한 보수
23:         public static string BosuForOne(int n){
24:             string s = string.Empty;
25:             for (int i = 0; i < 32; i++){
26:                 int aa = (n & MASK02) ^ MASK02;
27:                 //기본타입+string-->string이 된다.
28:                 s = string.Concat(aa, s);
29:                 n >>= 1;
30:             }
31:             s = s.Substring(s.IndexOf("1"));
32:             return s;
33:         }//
34:         //2에 대한 보수
35:         public static string BosuForTwo(int n){
36:             string s = string.Empty;
37:             bool first = false;
38:             for (int i = 0;  i < 32; i++){
39:                 int aa = 0;
40:                 if ((n & MASK02)==1 && !first){
41:                     aa = (n & MASK02);
42:                     first = true;
43:                 }
44:                 else if (first){//first==true
45:                     aa = (n & MASK02) ^ MASK02;
46:                 }
47:                 s = string.Concat(aa, s);
48:                 n >>= 1;
49:             }
50:             s = s.Substring(s.IndexOf("1"));
51:             return s;
52:         }//
53:         //2에 대한 보수
54:         public static string BosuForTwo2(int n){
55:             string s = string.Empty;
56:             for (int i = 0; i < 32; i++){
57:                 int aa = n & MASK02;
58:                 s = string.Concat(aa, s);
59:                 n >>= 1;//쉬프트연산은 음수,양수 무관
60:             }
61:             int lastIndex = s.LastIndexOf("1");
62:             string ts = s.Substring(lastIndex);
63:             string bs = s.Substring(0, lastIndex);
64:             bs = bs.Replace("1", "3");//1->3->0
65:             bs = bs.Replace("0", "1");//0->1
66:             bs = bs.Replace("3", "0");  
67:             //000001에서 00000제거
68:             bs = bs.Substring(bs.IndexOf("1"));
69:             //오른쪽에서 왼쪽으로 처음으로 1
70:             //나올때까지 변경없이 그대로
71:             bs += ts;
72:             return bs;
73:         }//
74:     }
75: }
