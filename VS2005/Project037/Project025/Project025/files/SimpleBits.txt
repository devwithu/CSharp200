01: using System;
02: using System.Collections.Generic;
03: using System.Text;
04: 
05: namespace Com.JungBo.Maths {
06:     //StringBuilder
07:     public class SimpleBits {
08: 
09:         public const int MASK02=1;    
10: 
11:         //10진수를 2진수로 진수변환
12:         public static string TenToBinary(int n) {
13:             StringBuilder sb = new StringBuilder();
14:             for (int i = 0; i < 32; i++){
15:                 int aa = n & MASK02;
16:                 sb.Insert(0,aa);
17:                 n >>= 1;//쉬프트연산은 음수,양수 무관
18:             }
19:             sb.Remove(0, sb.ToString().IndexOf("1"));
20:             return sb.ToString();
21:         }//
22:         //1에 대한 보수
23:         public static string BosuForOne(int n){
24:             StringBuilder sb = new StringBuilder();
25:             for (int i = 0; i < 32; i++)
26:             {
27:                 int aa = (n & MASK02) ^ MASK02;
28:                 sb.Insert(0, aa);
29:                 n >>= 1;
30:             }
31:             sb.Remove(0, sb.ToString().IndexOf("1"));
32:             return sb.ToString();
33:         }//
34:         //2에 대한 보수
35:         public static string BosuForTwo(int n){
36:             StringBuilder sb = new StringBuilder();
37:             bool first = false;
38:             for (int i = 0; i < 32; i++)
39:             {
40:                 int aa = 0;
41:                 if ((n & MASK02) == 1 && !first)
42:                 {//first!=true
43:                     aa = (n & MASK02);
44:                     first = true;
45:                 }
46:                 else if (first)
47:                 {//first==true
48:                     aa = (n & MASK02) ^ MASK02;
49:                 }
50:                 sb.Insert(0, aa);
51:                 n >>= 1;
52:             }
53:             sb.Remove(0, sb.ToString().IndexOf("1"));
54:             return sb.ToString();
55:         }//
56:         //2에 대한 보수
57:         public static string BosuForTwo2(int n){
58:             StringBuilder sb = new StringBuilder();
59:             string s = string.Empty;
60:             for (int i = 0; i < 32; i++){
61:                 int aa = n & MASK02;
62:                 sb.Insert(0, aa);//앞으로 붙는다.
63:                 n >>= 1;//쉬프트연산은 음수,양수 무관
64:             }
65:             
66:             int lastIndex = sb.ToString().LastIndexOf("1");
67:             string ts = sb.ToString().Substring(lastIndex);
68:             string bs = sb.ToString().Substring(0, lastIndex);
69:             sb.Remove(0,sb.Length);//모두 지우기
70:             //StringBuilder sbs = new StringBuilder(bs);
71:             sb.Append(bs);
72:             sb.Replace("1", "3")
73:             .Replace("0", "1")
74:             .Replace("3", "0");
75:             //000001에서 00000제거
76:             sb.Remove(0, sb.ToString().IndexOf("1"));
77:             //오른쪽에서 왼쪽으로 처음으로 1
78:             //나올때까지 변경없이 그대로
79:             sb.Append(ts);//뒤로 붙는다.
80:             return sb.ToString();
81:         }//
82:     }
83: }
