01: using System;
02: namespace Com.JungBo.Logic{
03:     //Random
04:     public class RSA{
05:         private int p=7;
06:         private int q=11;
07:         //생성자에서만 변경할 수 있다.
08:         public readonly  int SEED = 111;//11~1111까지
09:         private int seed = 37;  //보통 소수로 시작
10: 
11:         public RSA(int prime) {
12:             ///section 19 이용
13:             if(PrimNumber.IsPrime2(prime)){
14:                 SEED = prime;
15:             }
16:         }
17:         //밖에서는 호출할 수 없다.
18:         //seed가 없을 경우와 있을 경우 출력화면을 보이자. 
19:         //차이점을 인식시키자.
20:         private void MakePQ(){
21:             //두수가 동일할 경우가 많다.
22:             //Random r = new Random(); //1)
23:             //앞쪽수가 연속적으로 동일할 경우가 많다.
24:             //Random r = new Random(seed++);  //2)
25:             //수들이 동일할 경우가 적다.
26:             Random r =
27:              new Random(seed++ + DateTime.Now.Millisecond);
28:             
29:             int distance = SEED/2;
30:             int tP = r.Next(SEED - distance, SEED);
31:             //section 19 이용
32:             while (!PrimNumber.IsPrime2(tP)){
33:                 //소수가 아니라면 새로 만든다.
34:                 tP = r.Next(SEED - distance, SEED); ;
35:             }
36:             this.p = tP;
37: 
38:             int tQ = r.Next(SEED, SEED + distance);
39:             //q가 소수이면서 p와 값이 달라야한다.
40:             while (!PrimNumber.IsPrime2(tQ) || p == tQ){
41:                 //p보다는 큰 다른 소수
42:                 tQ = r.Next(SEED, SEED + distance);
43:             }
44:             this.q = tQ;
45:         }
46:         public void Make(){
47:             MakePQ();
48:         }
49:         public override string ToString(){
50:             return string.Format(
51:                 "{0} 근처의 서로다른 두 소수: [{1}, {2}]"
52:                 ,SEED,p,q);
53:         }
54:     }
55: }
